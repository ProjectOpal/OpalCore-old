/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.8 at Thu May  4 17:51:44 2017. */

#ifndef PB_CORE_SENSORS_IMU_PB_H_INCLUDED
#define PB_CORE_SENSORS_IMU_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _core_sensors_Accel {
    int32_t x;
    int32_t y;
    int32_t z;
/* @@protoc_insertion_point(struct:core_sensors_Accel) */
} core_sensors_Accel;

typedef struct _core_sensors_AirSpeed {
    int32_t airspeed;
/* @@protoc_insertion_point(struct:core_sensors_AirSpeed) */
} core_sensors_AirSpeed;

typedef struct _core_sensors_Gyro {
    int32_t x;
    int32_t y;
    int32_t z;
/* @@protoc_insertion_point(struct:core_sensors_Gyro) */
} core_sensors_Gyro;

typedef struct _core_sensors_Location {
    double lat;
    double lon;
    int32_t alt;
/* @@protoc_insertion_point(struct:core_sensors_Location) */
} core_sensors_Location;

typedef struct _core_sensors_ComputedState {
    int32_t roll;
    int32_t pitch;
    int32_t yaw;
    core_sensors_Location loc;
    int32_t groundspeed;
    int32_t airspeed;
/* @@protoc_insertion_point(struct:core_sensors_ComputedState) */
} core_sensors_ComputedState;

/* Default values for struct fields */

/* Initializer values for message structs */
#define core_sensors_Gyro_init_default           {0, 0, 0}
#define core_sensors_Accel_init_default          {0, 0, 0}
#define core_sensors_Location_init_default       {0, 0, 0}
#define core_sensors_ComputedState_init_default  {0, 0, 0, core_sensors_Location_init_default, 0, 0}
#define core_sensors_AirSpeed_init_default       {0}
#define core_sensors_Gyro_init_zero              {0, 0, 0}
#define core_sensors_Accel_init_zero             {0, 0, 0}
#define core_sensors_Location_init_zero          {0, 0, 0}
#define core_sensors_ComputedState_init_zero     {0, 0, 0, core_sensors_Location_init_zero, 0, 0}
#define core_sensors_AirSpeed_init_zero          {0}

/* Field tags (for use in manual encoding/decoding) */
#define core_sensors_Accel_x_tag                 1
#define core_sensors_Accel_y_tag                 2
#define core_sensors_Accel_z_tag                 3
#define core_sensors_AirSpeed_airspeed_tag       1
#define core_sensors_Gyro_x_tag                  1
#define core_sensors_Gyro_y_tag                  2
#define core_sensors_Gyro_z_tag                  3
#define core_sensors_Location_lat_tag            1
#define core_sensors_Location_lon_tag            2
#define core_sensors_Location_alt_tag            3
#define core_sensors_ComputedState_roll_tag      1
#define core_sensors_ComputedState_pitch_tag     2
#define core_sensors_ComputedState_yaw_tag       3
#define core_sensors_ComputedState_loc_tag       4
#define core_sensors_ComputedState_groundspeed_tag 5
#define core_sensors_ComputedState_airspeed_tag  6

/* Struct field encoding specification for nanopb */
extern const pb_field_t core_sensors_Gyro_fields[4];
extern const pb_field_t core_sensors_Accel_fields[4];
extern const pb_field_t core_sensors_Location_fields[4];
extern const pb_field_t core_sensors_ComputedState_fields[7];
extern const pb_field_t core_sensors_AirSpeed_fields[2];

/* Maximum encoded size of messages (where known) */
#define core_sensors_Gyro_size                   18
#define core_sensors_Accel_size                  18
#define core_sensors_Location_size               24
#define core_sensors_ComputedState_size          56
#define core_sensors_AirSpeed_size               6

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define IMU_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
